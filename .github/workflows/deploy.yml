name: CI/CD Pipeline for Eduathena Backend

# Déclencheurs d'événements
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build Docker Image
        run: |
          docker build . -t dufi1928/eduathena-backend:latest \
            --build-arg DB_NAME=${{ secrets.DB_NAME }} \
            --build-arg DB_USER=${{ secrets.DB_USER }} \
            --build-arg DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            --build-arg DB_HOST=${{ secrets.DB_HOST }} \
            --build-arg DB_PORT=${{ secrets.DB_PORT }}

      - name: Docker Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image
        run: docker push dufi1928/eduathena-backend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy docker-compose file to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}

          key: ${{ secrets.SSH_KEY }}
          source: "docker-compose.yml"
          target: "/home/ivan/deployments/backend"
          port: 2222

      -   name: Create .env file on server
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USERNAME }}
            key: ${{ secrets.SSH_KEY }}
            port: 2222
            script: |
              echo "DB_NAME=${{ secrets.DB_NAME }}" >> /home/ivan/deployments/backend/.env
              echo "DB_USER=${{ secrets.DB_USER }}" >> /home/ivan/deployments/backend/.env
              echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> /home/ivan/deployments/backend/.env
              echo "DB_HOST=${{ secrets.HOST }}" >> /home/ivan/deployments/backend/.env
              echo "DB_PORT=${{ secrets.DB_PORT }}" >> /home/ivan/deployments/backend/.env
              echo "TWILIO_ACCOUNT_SID=${{ secrets.TWILIO_ACCOUNT_SID }}" >> /home/ivan/deployments/backend/.env
              echo "TWILIO_AUTH_TOKEN=${{ secrets.TWILIO_AUTH_TOKEN }}" >> /home/ivan/deployments/backend/.env
              echo "TWILIO_PHONE_NUMBER=${{ secrets.TWILIO_PHONE_NUMBER }}" >> /home/ivan/deployments/backend/.env
      

      - name: Setup SSH for Deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: 2222
          script: |
            # Aller dans le répertoire de déploiement
            cd /home/ivan/deployments/backend

            # Connexion au registre Docker (Docker Hub par défaut)
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            # Récupérer les dernières images Docker pour le backend
            docker-compose pull

            # Déployer en utilisant Docker Compose
            docker-compose up -d

            # Vérifier les conteneurs en cours d'exécution
            docker ps
